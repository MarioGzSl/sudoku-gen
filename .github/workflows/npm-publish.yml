name: Publish to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish even if version has not changed'
        required: false
        type: boolean
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Check version change
        id: check-version
        run: |
          CURRENT_VERSION=$(grep '"version"' package.json | cut -d'"' -f4)
          echo "Current version: $CURRENT_VERSION"
          
          # Check if this is the first commit
          if git rev-parse HEAD~1 > /dev/null 2>&1; then
            # Not the first commit, check for changes
            if git show main~1:package.json > /dev/null 2>&1; then
              LAST_VERSION=$(git show main~1:package.json | grep '"version"' | cut -d'"' -f4)
              echo "Last version: $LAST_VERSION"
              
              if [ "$LAST_VERSION" != "$CURRENT_VERSION" ]; then
                echo "Version changed from $LAST_VERSION to $CURRENT_VERSION"
                echo "PUBLISH=true" >> $GITHUB_OUTPUT
              else
                echo "Version did not change"
                echo "PUBLISH=false" >> $GITHUB_OUTPUT
              fi
            else
              # package.json didn't exist in previous commit
              echo "First time adding package.json"
              echo "PUBLISH=true" >> $GITHUB_OUTPUT
            fi
          else
            # First commit in the repository
            echo "This is the first commit"
            echo "PUBLISH=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.check-version.outputs.PUBLISH == 'true' || inputs.force_publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 